---
- name: Check if NVM is installed
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
  register: cli_tools_nvm_check
  become: false

- name: Download and install NVM
  ansible.builtin.shell: |
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
  args:
    executable: /bin/bash
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
  when: not cli_tools_nvm_check.stat.exists
  become: true

- name: Ensure Node.js 22 is installed via NVM
  ansible.builtin.shell: |
    export NVM_DIR="$HOME/.nvm"
    . "$NVM_DIR/nvm.sh"
    nvm install 22
  args:
    executable: /bin/bash
  environment:
    NVM_DIR: "{{ ansible_env.HOME }}/.nvm"
  register: cli_tools_nvm_node22
  changed_when: "'Downloading and installing node v22.' in cli_tools_nvm_node22.stdout"
  become: false

- name: Set Node.js 22 as active version
  ansible.builtin.shell: |
    export NVM_DIR="$HOME/.nvm"
    . "$NVM_DIR/nvm.sh"
    nvm use 22
  args:
    executable: /bin/bash
  environment:
    NVM_DIR: "{{ ansible_env.HOME }}/.nvm"
  changed_when: false
  become: false

- name: Ensure ~/.bashrc.d exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.bashrc.d"
    state: directory
    mode: '0755'
  become: false

- name: Persist NVM environment config
  ansible.builtin.copy:
    src: nvm-config.sh
    dest: "{{ ansible_env.HOME }}/.bashrc.d/nvm-config.sh"
    mode: '0644'
  become: false
